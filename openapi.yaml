openapi: 3.0.1
info:
  description: This project provides a RESTful web service for managing recipies.
  title: recipes
  version: '1.0-SNAPSHOT'
externalDocs:
  url: https://github.com/rossdotpink/recipes
  description: Project home
servers:
  - url: http://127.0.0.1:8080
paths:
  /recipes/recipe:
    get:
      operationId: getRecipes
      description: Returns all recipes. Paginated; returns page 1 with 10 results by default.
      parameters:
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
            default: 1
          description: Page number for results pagination
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
          description: Page size for results pagination
      responses:
        200:
          description: successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        500:
          description: internal server error
    post:
      operationId: createRecipe
      description: Adds a new recipe. Request body must not include an 'id' field, unlike the normal Request schema. JPA will autogenerate an ID for us.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeWithoutId'
      responses:
        200:
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        404:
          description: not found error
        500:
          description: internal server error
  /recipes/recipe/{id}:
    get:
      operationId: getRecipe
      description: Returns the recipe with the given ID.
      parameters:
        - name: id
          description: ID of the recipe to be returned
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        404:
          description: not found error
        500:
          description: internal server error
    delete:
      operationId: delete
      description: Deletes the recipe with the given ID.
      parameters:
        - name: id
          description: ID of the recipe to be deleted
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: successful response
        404:
          description: not found error
        500:
          description: internal server error
    patch:
      operationId: patch
      description: Updates the recipe with the given ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Recipe'
      responses:
        200:
          description: successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        404:
          description: not found error
        410:
          description: invalid patch request
        500:
          description: internal server error

  /recipes/search/recipes:
    post:
      operationId: searchRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeSearch'
      responses:
        200:
          description: successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
        500:
          description: internal server error
components:
  schemas:
    Recipe:
      required:
        - name
        - serves
        - tags
        - ingredients
        - instructions
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        serves:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        ingredients:
          type: array
          items:
            type: string
        instructions:
          type: string
    RecipeWithoutId:
      required:
        - name
        - serves
        - tags
        - ingredients
        - instructions
      type: object
      properties:
        name:
          type: string
        serves:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        ingredients:
          type: array
          items:
            type: string
        instructions:
          type: string
    RecipeSearch:
      type: object
      description: This resource represents a search of the stored recipies.
      properties:
        name:
          type: string
        serves:
          type: integer
          format: int32
        tags:
          type: array
          items:
            type: string
        notTags:
          type: array
          items:
            type: string
        ingredients:
          type: array
          items:
            type: string
        notIngredients:
          type: array
          items:
            type: string
        instructions:
          type: string
